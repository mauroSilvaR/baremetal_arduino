
Some functions I've been think for the user to have at his disposal
1) For starting the timer
timer1.config(clk,prescaler,time,auto)
timer1.config(clk,prescaler,time,single_shot)
timer1.start() // to start the timer
timer1.stop() // to hat the timer when in auto mode
timer1.clean() // completely reset the timer regs to its default values
timer1.kill() // this way the user would completely stop the timer and
              // reset all the register to they default value from atmel/microchip
             // any interrupts configured would also be cleaned
For the modes
auto would be for a recurring timer that never stops 
and single shot would be a timer that counts only once then resets

2) functions for setting some simpe configs so the user could change separate settings

timer1.prescaler_set(prescaler) // that way user could change the presecaler setting
timer1.time_set(time_ms) // this way user could choose a actual value to place in compare reg
timer1.callback_register(*pointer_to_func) // JUICY one, user could create its own
functions that would run inside the ISR under the hood. 
timer1.set_default() // the user would be able to store a basic config for the timer for
		     //rapid change when using timer1.clean


3) Some simple helper functions

// this way user would be able to see all current settings in use
timer1.print_settings()
//this way the user would be able to see the content of a current timer reg
timer1.print_reg(reg) 
timer1.print_default() // user would be able to print current default setting
timer1.get_prescaler() // return the active prescaler value as a unsigned char
timer1.get_period() // return current period register as a unsigned char
timer1.get_compare() // return the actual compare value as a unsigned char
timer1.get_clk()    // return the current clk at wich the timer is running on


for a start i think its enough, its very exciting, specially the ISR callbacks and the possibilites of expanding this to other platforms like STM32, PIC32, Nordic or even NXP.
But I want to start simple. what do you think? can you at this beggining moment help me by suggesting options I have for this. Like I would like my platform to be able to be run on any IDE, to be agnostic, how would I start with a simple arduino version for now?

